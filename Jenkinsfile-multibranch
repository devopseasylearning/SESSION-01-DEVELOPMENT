pipeline {
agent { 
    label 'node3' 
    }

options {
    buildDiscarder(logRotator(numToKeepStr: '20'))
    disableConcurrentBuilds()
    timeout (time: 30, unit: 'MINUTES')
    timestamps()
  }

   
        

    stages {

      stage('setting up ') {
      agent { 
    label 'node3' 
    }

            steps {
                sh '''
               sudo rm -rf SESSION-01-DEVELOPMENT || true
               git clone -b $BRANCH_NAME  https://github.com/devopseasylearning/SESSION-01-DEVELOPMENT.git
               cd SESSION-01-DEVELOPMENT
                '''
            }
        }

        
        stage('Build artifact ') {
        
              agent {
                 label 'node3'  // both label and image
                 docker { image 'devopseasylearning2021/s1-project02:maven-3.8.4-openjdk-8' }
                   }

            steps {
                sh '''
                mvn clean
                rm -rf /home/ansible/webapp.war || true 
                ls -l
                mvn package 
                cp -r  webapp/target/webapp.war .
             
                ls  -ltr 
                '''
            }
        }



        stage('SonarQube analysis') {
            agent{
                label 'node3'  // both label and image
                docker { image 'sonarsource/sonar-scanner-cli:4.7.0' }  
                }
               environment {
        CI = 'true'
        scannerHome='/opt/sonar-scanner'
    }
            steps{
                withSonarQubeEnv('Sonar') {
                    sh "${scannerHome}/bin/sonar-scanner"
                }
            }
        }


    
      
       stage('build images') {
       agent { 
    label 'node3' 
    }
            steps {
                sh '''
                echo $BRANCH_NAME

DIR=`mktemp -d`
cd $DIR
A=`find /home/ansible/workspace/  -type f -iname webapp.war | grep $BRANCH_NAME |  head -1`
cp -r $A .
rm -rf Dockerfile || true 

cat <<EOF > Dockerfile
FROM tomcat:8.0-alpine
COPY ./webapp.war  /usr/local/tomcat/webapps
EOF

                ls -l
                docker build -t devopseasylearning2021/challenger:${BUILD_NUMBER} .
                docker images 
                docker rmi -f devopseasylearning2021/challenger:${BUILD_NUMBER} || true 
rm -rf $DIR
                '''
            }
        }

       

      

    }


   post {
 
    unstable {
      slackSend (channel: '#jenkins', color: 'warning', message: "UNSTABLE:  Branch name  <<${env.BRANCH_NAME}>>  Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})")
    }

    failure {
      slackSend (channel: '#jenkins', color: '#FF0000', message: "FAILURE:  Branch name  <<${env.BRANCH_NAME}>> Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})")
    }
   
    cleanup {
      deleteDir()
    }
}




}



    
 
